{"version":3,"sources":["Button.js","HandIcon.js","assets/rock.svg","assets/scissor.svg","assets/paper.svg","HandButton.js","utils.js","App.js","index.js"],"names":["Button","children","onClick","IMAGES","rock","scissor","paper","HandIcon","className","value","src","alt","HandButton","HANDS","WINS","compareHand","a","b","generateRandomHand","n","idx","length","Math","floor","random","INITIAL_VALUE","App","useState","hand","setHand","otherHand","setOtherHand","gameHistory","setGameHistory","score","setScore","otherScore","setOtherScore","bet","setBet","handleButtonClick","nextHand","nextOtherHand","nextHistoryItem","me","other","comparison","getResult","type","min","max","onChange","e","num","Number","target","join","ReactDOM","render","document","getElementById"],"mappings":"2MAIeA,MAJf,YAAwC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAC1B,OAAO,wBAAQA,QAASA,EAAjB,SAA2BD,KCG9BE,EAAS,CACbC,KCLa,IAA0B,iCDMvCC,QENa,IAA0B,oCFOvCC,MGPa,IAA0B,mCHe1BC,MALf,YAAyC,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MACvBC,EAAMP,EAAOM,GACnB,OAAO,qBAAKD,UAAWA,EAAWE,IAAKA,EAAKC,IAAKF,K,MIApCG,MATf,YAAyC,IAAnBH,EAAkB,EAAlBA,MAAOP,EAAW,EAAXA,QAE3B,OACE,wBAAQM,UAAU,aAAaN,QAFb,kBAAMA,EAAQO,IAEhC,SACE,cAAC,EAAD,CAAUD,UAAU,kBAAkBC,MAAOA,OCP7CI,EAAQ,CAAC,OAAQ,UAAW,SAE5BC,EAAO,CACXV,KAAM,UACNC,QAAS,QACTC,MAAO,QAGF,SAASS,EAAYC,EAAGC,GAC7B,OAAIH,EAAKE,KAAOC,EAAU,EACtBH,EAAKG,KAAOD,GAAW,EACpB,EAOF,SAASE,IACd,IALcC,EAKRC,GALQD,EAKKN,EAAMQ,OAJlBC,KAAKC,MAAMD,KAAKE,SAAWL,IAKlC,OAAON,EAAMO,GCdf,IAAMK,EAAgB,OAqEPC,MA5Df,WACE,MAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAASF,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAsBV,mBAAS,GAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KAEMC,EAAoB,SAACC,GACzB,IAAMC,EAAgBxB,IAChByB,EAjBV,SAAmBC,EAAIC,GACrB,IAAMC,EAAa/B,EAAY6B,EAAIC,GACnC,OAAIC,EAAa,EAAU,eACvBA,EAAa,EAAU,eACpB,qBAamBC,CAAUN,EAAUC,GACtCI,EAAa/B,EAAY0B,EAAUC,GACzCb,EAAQY,GACRV,EAAaW,GACbT,EAAe,GAAD,mBAAKD,GAAL,CAAkBW,KAC5BG,EAAa,GAAGX,EAASD,EAAQI,GACjCQ,EAAa,GAAGT,EAAcH,EAAQI,IAoB5C,OACE,gCACE,cAAC,EAAD,CAAQpC,QAnBa,WACvB2B,EAAQJ,GACRM,EAAaN,GACbQ,EAAe,IACfE,EAAS,GACTE,EAAc,GACdE,EAAO,IAaL,sCACA,gCACGL,EADH,MACaE,KAEb,gCACE,cAAC,EAAD,CAAU3B,MAAOmB,IADnB,KAGE,cAAC,EAAD,CAAUnB,MAAOqB,OAEnB,8BACE,uBAAOkB,KAAK,SAASvC,MAAO6B,EAAKW,IAAK,EAAGC,IAAK,EAAGC,SApB/B,SAACC,GACvB,IAAIC,EAAMC,OAAOF,EAAEG,OAAO9C,OACtB4C,EAAM,IAAGA,GAAO,IAChBA,EAAM,IAAGA,EAAM,GACnBA,EAAM/B,KAAKC,MAAM8B,GACjBd,EAAOc,QAiBL,4DAAWrB,EAAYwB,KAAK,SAC5B,gCACE,cAAC,EAAD,CAAY/C,MAAM,OAAOP,QAASsC,IAClC,cAAC,EAAD,CAAY/B,MAAM,UAAUP,QAASsC,IACrC,cAAC,EAAD,CAAY/B,MAAM,QAAQP,QAASsC,WClE3CiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cdfd63b9.chunk.js","sourcesContent":["function Button({ children, onClick }) {\n  return <button onClick={onClick}>{children}</button>;\n}\n\nexport default Button;\n","import rockImg from './assets/rock.svg';\nimport scissorImg from './assets/scissor.svg';\nimport paperImg from './assets/paper.svg';\n\nconst IMAGES = {\n  rock: rockImg,\n  scissor: scissorImg,\n  paper: paperImg,\n};\n\nfunction HandIcon({ className, value }) {\n  const src = IMAGES[value];\n  return <img className={className} src={src} alt={value} />;\n}\n\nexport default HandIcon;","export default __webpack_public_path__ + \"static/media/rock.24f8e255.svg\";","export default __webpack_public_path__ + \"static/media/scissor.6096875e.svg\";","export default __webpack_public_path__ + \"static/media/paper.19c16065.svg\";","import HandIcon from './HandIcon';\nimport './HandButton.css';\n\nfunction HandButton({ value, onClick }) {\n  const handleClick = () => onClick(value);\n  return (\n    <button className=\"HandButton\" onClick={handleClick}>\n      <HandIcon className=\"HandButton-icon\" value={value} />\n    </button>\n  );\n}\n\nexport default HandButton;","const HANDS = ['rock', 'scissor', 'paper'];\n\nconst WINS = {\n  rock: 'scissor',\n  scissor: 'paper',\n  paper: 'rock',\n};\n\nexport function compareHand(a, b) {\n  if (WINS[a] === b) return 1;\n  if (WINS[b] === a) return -1;\n  return 0;\n}\n\nfunction random(n) {\n  return Math.floor(Math.random() * n);\n}\n\nexport function generateRandomHand() {\n  const idx = random(HANDS.length);\n  return HANDS[idx];\n}\n","import { useState } from 'react';\nimport Button from './Button';\nimport HandButton from './HandButton';\nimport HandIcon from './HandIcon';\nimport { compareHand, generateRandomHand } from './utils';\n\nconst INITIAL_VALUE = 'rock';\n\nfunction getResult(me, other) {\n  const comparison = compareHand(me, other);\n  if (comparison > 0) return '승리';\n  if (comparison < 0) return '패배';\n  return '무승부';\n}\n\nfunction App() {\n  const [hand, setHand] = useState(INITIAL_VALUE);\n  const [otherHand, setOtherHand] = useState(INITIAL_VALUE);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [score, setScore] = useState(0);\n  const [otherScore, setOtherScore] = useState(0);\n  const [bet, setBet] = useState(1);\n\n  const handleButtonClick = (nextHand) => {\n    const nextOtherHand = generateRandomHand();\n    const nextHistoryItem = getResult(nextHand, nextOtherHand);\n    const comparison = compareHand(nextHand, nextOtherHand);\n    setHand(nextHand);\n    setOtherHand(nextOtherHand);\n    setGameHistory([...gameHistory, nextHistoryItem]);\n    if (comparison > 0) setScore(score + bet);\n    if (comparison < 0) setOtherScore(score + bet);\n  };\n\n  const handleClearClick = () => {\n    setHand(INITIAL_VALUE);\n    setOtherHand(INITIAL_VALUE);\n    setGameHistory([]);\n    setScore(0);\n    setOtherScore(0);\n    setBet(1);\n  };\n\n  const handleBetChange = (e) => {\n    let num = Number(e.target.value);\n    if (num > 9) num %= 10;\n    if (num < 1) num = 1;\n    num = Math.floor(num);\n    setBet(num);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClearClick}>처음부터</Button>\n      <div>\n        {score} : {otherScore}\n      </div>\n      <div>\n        <HandIcon value={hand} />\n        VS\n        <HandIcon value={otherHand} />\n      </div>\n      <div>\n        <input type=\"number\" value={bet} min={1} max={9} onChange={handleBetChange}></input>\n      </div>\n      <p>승부 기록: {gameHistory.join(', ')}</p>\n      <div>\n        <HandButton value=\"rock\" onClick={handleButtonClick} />\n        <HandButton value=\"scissor\" onClick={handleButtonClick} />\n        <HandButton value=\"paper\" onClick={handleButtonClick} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}